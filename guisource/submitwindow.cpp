#include "submitwindow.h"
#include "ui_submitwindow.h"
#include "client/src/TCPClient.h"
/* parameterized constructor grenerated by qt creator
 * takes a parent window
 * modified to take a name string
 */
SubmitWindow::SubmitWindow(std::string str, QWidget *parent) :
    QDialog(parent),
    ui(new Ui::SubmitWindow)
{
    ui->setupUi(this);
    this->str = str;
}
/* destructor generated by qt */
SubmitWindow::~SubmitWindow()
{
    delete ui;
}
/* cancel button clicked event closed this window and whole application */
void SubmitWindow::on_cancelButton_clicked()
{
    this->close();
}
/* submit button appends results to a name string and opens a tcp socket */
void SubmitWindow::on_submitButton_clicked()
{
    QString qname = ui->nameInput->text();
    if(qname.length() < 1 || qname.length() > 40) {
        QString no = "Invalid Name!";
        ui->responseLabel->setText(no);
    }
    else {
        std::string name = qname.toStdString();
        //append the str field to the name
        name.append(";");
        name.append(str);
        //create a TCPClient object
        TCPClient tcp;
        //this is the server address and port hosting the listener
        //if setup returns false, connection failed
        if(tcp.setup("72.219.21.177", 47002) != true ) {
            QString fail = "Connection Failure";
            ui->responseLabel->setText(fail);
            this->close();
        }

        srand(time(NULL));

        //send the string
        tcp.Send(name);

        //recieve server reply
        string rec = tcp.receive();

        //if reply is not null, exit
        if( rec != "" )
        {
            //this should set status label to upload success and disable the submit button in future
            tcp.exit();
            this->close();
        }
        else {
            //if response is empty, set status label
            tcp.exit();
            QString empty = "Empty Response";

            ui->responseLabel->setText(empty);
        }
    }
}
